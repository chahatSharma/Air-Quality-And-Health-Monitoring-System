package com.reverse.generated;
// Generated Apr 2, 2016 9:49:27 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Person generated by hbm2java
 */
@Entity
@Table(name = "person", catalog = "webtools")
public class Person implements java.io.Serializable {

	private long personId;
	private Address addressByOfficeAddressId;
	private Address addressByHomeAddressId;
	private String firstName;
	private String lastName;
	private Date dob;
	private String emailId;
	private Set patients = new HashSet(0);

	public Person() {
	}

	public Person(long personId) {
		this.personId = personId;
	}

	public Person(long personId, Address addressByOfficeAddressId, Address addressByHomeAddressId, String firstName,
			String lastName, Date dob, String emailId, Set patients) {
		this.personId = personId;
		this.addressByOfficeAddressId = addressByOfficeAddressId;
		this.addressByHomeAddressId = addressByHomeAddressId;
		this.firstName = firstName;
		this.lastName = lastName;
		this.dob = dob;
		this.emailId = emailId;
		this.patients = patients;
	}

	@Id

	@Column(name = "PersonId", unique = true, nullable = false)
	public long getPersonId() {
		return this.personId;
	}

	public void setPersonId(long personId) {
		this.personId = personId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OfficeAddressID")
	public Address getAddressByOfficeAddressId() {
		return this.addressByOfficeAddressId;
	}

	public void setAddressByOfficeAddressId(Address addressByOfficeAddressId) {
		this.addressByOfficeAddressId = addressByOfficeAddressId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HomeAddressID")
	public Address getAddressByHomeAddressId() {
		return this.addressByHomeAddressId;
	}

	public void setAddressByHomeAddressId(Address addressByHomeAddressId) {
		this.addressByHomeAddressId = addressByHomeAddressId;
	}

	@Column(name = "FirstName", length = 150)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LastName", length = 150)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DOB", length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "emailId", length = 100)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set getPatients() {
		return this.patients;
	}

	public void setPatients(Set patients) {
		this.patients = patients;
	}

}
