package com.neu.pojo;
// Generated Apr 9, 2016 10:44:56 PM by Hibernate Tools 4.3.1.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;

import com.neu.business.Auditable;

/**
 * Vitalsign generated by hbm2java
 */
@Entity
@Table(name = "vitalsign", catalog = "webtools")
public class Vitalsign implements java.io.Serializable, Auditable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6422721109001856140L;
	private long vitalSignId;
	private Patient patient;
	private Date captureDate;
	private Integer respirationRate;
	private Integer heartRate;
	private Integer weight;
	private Integer sysBp;
	private Date creationTime;
	private Date modifiedTime;
	private String conclusion;
	private ArrayList<String> symptomsSelected;
	
	private Set<Symptomslist> symptomsList = new HashSet<Symptomslist>(0);

	public Vitalsign() {
	}

	public Vitalsign(long vitalSignId, Date creationTime, Date modifiedTime) {
		this.vitalSignId = vitalSignId;
		this.creationTime = creationTime;
		this.modifiedTime = modifiedTime;
	}

	public Vitalsign(long vitalSignId, Patient patient, Date captureDate, Integer respirationRate, Integer heartRate,
			Integer weight, Integer sysBp, Date creationTime, Date modifiedTime, Set<Symptomslist> symptomsList) {
		this.vitalSignId = vitalSignId;
		this.patient = patient;
		this.captureDate = captureDate;
		this.respirationRate = respirationRate;
		this.heartRate = heartRate;
		this.weight = weight;
		this.sysBp = sysBp;
		this.creationTime = creationTime;
		this.modifiedTime = modifiedTime;
		this.symptomsList = symptomsList;
	}

	@Id
	@GenericGenerator(name="vsID",strategy="increment")
	@GeneratedValue(generator="vsID")
	@Column(name = "VitalSignId", unique = true, nullable = false)
	public long getVitalSignId() {
		return this.vitalSignId;
	}

	public void setVitalSignId(long vitalSignId) {
		this.vitalSignId = vitalSignId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PersonId")
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CaptureDate", length = 10)
	public Date getCaptureDate() {
		return this.captureDate;
	}

	public void setCaptureDate(Date captureDate) {
		this.captureDate = captureDate;
	}

	@Column(name = "RespirationRate")
	public Integer getRespirationRate() {
		return this.respirationRate;
	}

	public void setRespirationRate(Integer respirationRate) {
		this.respirationRate = respirationRate;
	}

	@Column(name = "HeartRate")
	public Integer getHeartRate() {
		return this.heartRate;
	}

	public void setHeartRate(Integer heartRate) {
		this.heartRate = heartRate;
	}

	@Column(name = "Weight")
	public Integer getWeight() {
		return this.weight;
	}

	public void setWeight(Integer weight) {
		this.weight = weight;
	}

	@Column(name = "SysBP")
	public Integer getSysBp() {
		return this.sysBp;
	}

	public void setSysBp(Integer sysBp) {
		this.sysBp = sysBp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creationTime", nullable = false, length = 19)
	public Date getCreationTime() {
		return this.creationTime;
	}

	public void setCreationTime(Date creationTime) {
		this.creationTime = creationTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modifiedTime", nullable = false, length = 19)
	public Date getModifiedTime() {
		return this.modifiedTime;
	}

	public void setModifiedTime(Date modifiedTime) {
		this.modifiedTime = modifiedTime;
	}

	 @ManyToMany(cascade = {CascadeType.ALL})
	    @JoinTable(name="SymptomsVitalsList", 
	                joinColumns={@JoinColumn(name="VitalSignId")}, 
	                inverseJoinColumns={@JoinColumn(name="SymptomsId")})
	public Set<Symptomslist> getSymptomsList() {
		return symptomsList;
	}

	public void setSymptomsList(Set<Symptomslist> symptomsList) {
		this.symptomsList = symptomsList;
	}
	
	@Transient
	public ArrayList<String> getSymptomsSelected() {
		return symptomsSelected;
	}

	public void setSymptomsSelected(ArrayList<String> symptomsSelected) {
		this.symptomsSelected = symptomsSelected;
	}

	public String getConclusion() {
		return conclusion;
	}

	public void setConclusion(String conclusion) {
		this.conclusion = conclusion;
	}


	

}
