package com.neu.pojo;
//Generated Apr 9, 2016 10:44:56 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import com.neu.business.Auditable;

/**
* Patient generated by hbm2java
*/
@Entity
@Table(name = "patient", catalog = "webtools")
@org.hibernate.annotations.Entity(
		dynamicUpdate = true
)
public class Patient implements java.io.Serializable, Auditable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5151871257063370547L;
	private long personId;
	private Person person;
	private String bloodGroup;
	private Integer reportingZipCode;
	private Date creationTime;
	private Date modifiedTime;
	private String doctorFirstName;
	private String emailId;
	private Long phoneNo;
	private String prefModeOfComm;
	private Set<Indoorairquality> indoorAQI=new HashSet<Indoorairquality>();
	
	public String getEmailId() {
		return emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	public Long getPhoneNo() {
		return phoneNo;
	}

	public void setPhoneNo(Long phoneNo) {
		this.phoneNo = phoneNo;
	}

	public String getPrefModeOfComm() {
		return prefModeOfComm;
	}

	public void setPrefModeOfComm(String prefModeOfComm) {
		this.prefModeOfComm = prefModeOfComm;
	}

	public String getDoctorFirstName() {
		return doctorFirstName;
	}

	public void setDoctorFirstName(String doctorFirstName) {
		this.doctorFirstName = doctorFirstName;
	}

	public String getDoctorLastName() {
		return doctorLastName;
	}

	public void setDoctorLastName(String doctorLastName) {
		this.doctorLastName = doctorLastName;
	}

	public String getDoctorPracticeNo() {
		return doctorPracticeNo;
	}

	public void setDoctorPracticeNo(String doctorPracticeNo) {
		this.doctorPracticeNo = doctorPracticeNo;
	}

	private String doctorLastName;
	private String doctorPracticeNo;
	private Set<Symptomsreported> symptomsreporteds = new HashSet<Symptomsreported>(0);
	private Set<Vitalsign> vitalsigns = new HashSet<Vitalsign>(0);

	public Patient() {
	}

	public Patient(Person person, Date creationTime, Date modifiedTime) {
		this.person = person;
		this.creationTime = creationTime;
		this.modifiedTime = modifiedTime;
	}

	public Patient(Person person, String bloodGroup, Integer reportingZipCode, Date creationTime, Date modifiedTime,
			Set<Symptomsreported> symptomsreporteds, Set<Vitalsign> vitalsigns) {
		this.person = person;
		this.bloodGroup = bloodGroup;
		this.reportingZipCode = reportingZipCode;
		this.creationTime = creationTime;
		this.modifiedTime = modifiedTime;
		this.symptomsreporteds = symptomsreporteds;
		this.vitalsigns = vitalsigns;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "person"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "PersonId", unique = true, nullable = false)
	public long getPersonId() {
		return this.personId;
	}

	public void setPersonId(long personId) {
		this.personId = personId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@Column(name = "BloodGroup", length = 20)
	public String getBloodGroup() {
		return this.bloodGroup;
	}

	public void setBloodGroup(String bloodGroup) {
		this.bloodGroup = bloodGroup;
	}

	@Column(name = "reportingZipCode")
	public Integer getReportingZipCode() {
		return this.reportingZipCode;
	}

	public void setReportingZipCode(Integer reportingZipCode) {
		this.reportingZipCode = reportingZipCode;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creationTime", nullable = false, length = 19)
	public Date getCreationTime() {
		return this.creationTime;
	}

	public void setCreationTime(Date creationTime) {
		this.creationTime = creationTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modifiedTime", nullable = false, length = 19)
	public Date getModifiedTime() {
		return this.modifiedTime;
	}

	public void setModifiedTime(Date modifiedTime) {
		this.modifiedTime = modifiedTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Symptomsreported> getSymptomsreporteds() {
		return this.symptomsreporteds;
	}

	public void setSymptomsreporteds(Set<Symptomsreported> symptomsreporteds) {
		this.symptomsreporteds = symptomsreporteds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Vitalsign> getVitalsigns() {
		return this.vitalsigns;
	}
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "patient")
	public Set<Indoorairquality> getIndoorAQI() {
		return indoorAQI;
	}

	public void setIndoorAQI(Set<Indoorairquality> indoorAQI) {
		this.indoorAQI = indoorAQI;
	}

	public void setVitalsigns(Set<Vitalsign> vitalsigns) {
		this.vitalsigns = vitalsigns;
	}

}
